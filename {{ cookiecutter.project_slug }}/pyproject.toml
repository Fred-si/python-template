[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "{{ cookiecutter.project_name }}"
version = "0.0.1"
authors = [
    { name = "fred-si", email = "fred-si@zaclys.net" },
]
description = "{{ cookiecutter.project_description }}"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
]

dependencies = []

[project.scripts]
hello = "src.{{ cookiecutter.project_name }}:main"

[project.urls]
"Homepage" = "https://github.com/fred-si/{{ cookiecutter.project_name }}"
"Bug Tracker" = "https://github.com/fred-si/{{ cookiecutter.project_name }}/issues"

[tool.pytest.ini_options]
pythonpath = "src"
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
]
norecursedirs = [
    "dist",
    "build",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".github",
]

[tool.mypy]
python_version = "3.11"
mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
strict = true
exclude = [
    "^(data|build|venv|alembic)/$",
    '^(^\.mypy_cache|\.pytest_cache|\.ruff_cache)/$'
]

[[tool.mypy.overrides]]
module = "tests.*"
disable_error_code = ["method-assign"]

[tool.ruff]
fix = true
unsafe-fixes = true

extend-select = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
ignore = [
    "D10", # missing docstring
    "D203", # one blank line before class docstring
    "D213", # multi-line summary first line
    "ANN", # type annotation
    "T20", # print/pprint
    "I001", # import sort/formating
    "DTZ001",
    "DTZ005",
    "DTZ006",
    "RUF001", # ambiguous character
    "PLC0414", # useless-import-alias
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["E402"]
"test_*.py" = [
    "S101", # assert
    "PLR2004", # missing-type-self
    "E501", # line-too-long
]
"src/conftest.py" = [
    "INP001", # add __init__.py
]

[tool.ruff.flake8-annotations]
mypy-init-return = true

[tool.ruff.flake8-quotes]
inline-quotes = "double"

[tool.ruff.isort]
lines-between-types = 1
order-by-type = true

[tool.black]
target-version = ['py311', 'py312']
line-length = 80

[tool.coverage.run]
omit = [
    "tests/*",
    "alembic/*",
    "venv/*",
    "data/*",
    ".pytest_cache/*",
    ".mypy_cache/*",
    ".ruff_cache/*",
]
branch = true

[tool.coverage.report]
exclude_also = [
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self\\.debug",
    # Don't complain if non-runnable code isn't run:
    "if TYPE_CHECKING:",
    "assert_never",
    "@overload",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
]
